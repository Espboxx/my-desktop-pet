/* Removed .pet-window-container and .desktop-pet-container rules */

/* Main container for pet and menu */
.pet-container {
  display: flex;
  flex-direction: row; /* Arrange items horizontally */
  align-items: center; /* Vertically center items */
  justify-content: center; /* Center items horizontally */
  gap: 10px; /* Adjust horizontal gap */
  width: 100%;
  height: 100%;
  padding: 15px; /* Increase padding */
  box-sizing: border-box; /* Include padding in width/height */
  /* overflow: hidden; */ /* Hide overflow - Temporarily commented out for debugging */
  background-color: transparent; /* Set background to transparent */
  pointer-events: all;
}

/* Pet element */
.pet {
  width: 80px;
  height: 80px;
  background-color: #ffcc80;
  border: 2px solid #e65100;
  border-radius: 50% 50% 30% 30% / 60% 60% 40% 40%;
  /* position: absolute; */ /* Removed absolute positioning */
  /* bottom: 0; */
  /* left: 5px; */
  cursor: grab;
  flex-shrink: 0; /* Prevent pet from shrinking */
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
  font-size: 16px;
  font-weight: bold;
  color: #ffffff;
  box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.2);
  transition: transform 0.1s ease-out;
  user-select: none;
  /* -webkit-app-region: drag; */ /* Remove drag region entirely */
  /* z-index: 2; */ /* No longer needed with flex layout */
  pointer-events: all; /* 确保宠物可以接收点击事件 */
}

.pet:hover {
  transform: scale(1.05);
}

.pet:active {
  cursor: grabbing;
}

.pet-face {
  font-size: 24px;
  line-height: 1;
}

/* 状态条 */
.status-bar {
  position: relative; /* Change from absolute */
  /* top: -80px; */ /* Remove */
  /* left: 0; */ /* Remove */
  width: 150px; /* Set a fixed width for the status bar */
  background-color: rgba(255, 255, 255, 0.9);
  border: 1px solid #ddd;
  border-radius: 8px;
  padding: 8px;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
  /* z-index: 5; */ /* Remove */
  display: flex;
  flex-direction: column;
  gap: 6px;
  /* -webkit-app-region: no-drag; */ /* 移除 */
}

.status-item {
  display: flex;
  align-items: center;
  gap: 5px; /* 稍微减小间隙 */
  justify-content: space-between; /* 让元素分布在两端 */
}

.status-label {
  font-size: 12px;
  width: 30px; /* 保持标签宽度 */
  color: #555;
  flex-shrink: 0; /* 防止标签收缩 */
}

.status-meter {
  flex-grow: 1; /* 让进度条占据剩余空间 */
  height: 12px;
  background-color: #eee;
  border-radius: 6px;
  overflow: hidden;
  margin: 0 5px; /* 在进度条左右添加一些边距 */
}

.status-meter-fill {
  height: 100%;
  border-radius: 6px;
  transition: width 0.5s ease, background-color 0.3s ease; /* Add transition for background color */
}

.status-meter-fill.mood {
  background-color: #ff6b6b;
}

.status-meter-fill.cleanliness {
  background-color: #4ecdc4;
}

.status-meter-fill.hunger {
  background-color: #ffd166;
}

.status-meter-fill.energy {
  background-color: #06d6a0;
}

/* 新增：状态数值样式 */
.status-value {
  font-size: 11px; /* 稍小一点的字体 */
  font-weight: bold;
  color: #333;
  min-width: 25px; /* 保证至少有一定宽度 */
  text-align: right; /* 右对齐 */
  flex-shrink: 0; /* 防止数值收缩 */
}

/* 低状态警告样式 */
.status-meter-fill.low-warning {
  background-color: #f44336; /* 红色 */
  animation: blink-warning 1s infinite alternate; /* 添加闪烁动画 */
}

@keyframes blink-warning {
  from { opacity: 1; }
  to { opacity: 0.6; }
}

/* 状态积极变化动画 */
@keyframes increase-positive-flash {
  0%, 100% { filter: brightness(1); }
  50% { filter: brightness(1.3); } /* 短暂变亮 */
}

.status-meter-fill.increase-positive {
  animation: increase-positive-flash 0.5s ease-out;
}

/* 状态恢复动画 */
@keyframes recovery-positive-flash {
  0%, 100% { box-shadow: none; }
  50% { box-shadow: 0 0 8px 2px rgba(76, 175, 80, 0.7); } /* 短暂绿色外发光 */
}

.status-meter-fill.recovery-positive {
  animation: recovery-positive-flash 0.6s ease-in-out;
}

/* 疲惫动画 */
@keyframes tired-sway {
  0%, 100% { transform: translateX(0) rotate(0); opacity: 1; }
  25% { transform: translateX(-3px) rotate(-2deg); opacity: 0.8; }
  75% { transform: translateX(3px) rotate(2deg); opacity: 0.8; }
}

.pet.tired-animation {
  animation: tired-sway 0.6s ease-in-out;
}

/* 思考动画 */
@keyframes thinking-bob {
  0%, 100% { transform: translateY(0); }
  50% { transform: translateY(-3px); }
}

.pet.thinking-animation {
  animation: thinking-bob 0.7s ease-in-out;
}

/* 分心动画 */
@keyframes distracted-look {
  0%, 100% { transform: translateX(0) rotate(0); }
  20%, 60% { transform: translateX(-4px) rotate(-3deg); }
  40%, 80% { transform: translateX(4px) rotate(3deg); }
}

.pet.distracted-animation {
  animation: distracted-look 0.6s ease-in-out;
}

/* 生病动画 */
@keyframes sick-tremble {
  0%, 100% { transform: translateX(0); filter: brightness(1); }
  10%, 30%, 50%, 70%, 90% { transform: translateX(-1px); filter: brightness(0.8); }
  20%, 40%, 60%, 80% { transform: translateX(1px); filter: brightness(0.8); }
}

.pet.sick-animation {
  animation: sick-tremble 1s linear infinite; /* 无限循环直到状态改变 */
}

/* 思考气泡 */
.thought-bubble {
  position: absolute; /* Position relative to the pet wrapper */
  /* top: -5px; */ /* Remove static positioning, will be handled by JS */
  /* left: 55px; */ /* Remove static positioning, will be handled by JS */
  background-color: #ffffff; /* Opaque white background */
  border: 1px solid #e2e8f0; /* Lighter border */
  border-radius: 12px; /* Less circular radius */
  padding: 8px 12px; /* Increased padding */
  /* font-size: 18px; */ /* Remove static font size, handled by JS */
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.08); /* Softer shadow */
  z-index: 5;
  animation: popIn 0.3s ease-out;
  /* white-space: nowrap; */ /* Allow text wrapping */
  max-width: 150px; /* Optional: Limit maximum width */
}

.thought-bubble::after {
  content: '';
  position: absolute;
  bottom: -5px; /* Position tail slightly lower */
  left: 10px; /* Adjust horizontal position of tail */
  width: 10px; /* Slightly larger tail */
  height: 10px;
  background-color: #ffffff; /* Match bubble background */
  border: none; /* Remove border from tail */
  border-bottom: 1px solid #e2e8f0; /* Add border only to relevant sides */
  border-right: 1px solid #e2e8f0;
  transform: rotate(45deg); /* Keep rotation */
}

/* Menu (previously context menu) */
.pet-menu {
  position: absolute; /* Position absolutely relative to pet-container */
  /* Positioning is now handled inline via style prop in PetWindow.tsx */
  /* top: 105%; */
  /* left: 50%; */
  /* transform: translateX(-50%); */
  background-color: #ffffff; /* White background */
  border: 1px solid #e2e8f0; /* Lighter border */
  border-radius: 10px; /* Softer radius */
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15); /* Slightly stronger shadow for popup */
  padding: 8px; /* Keep padding */
  display: flex; /* Use flexbox for menu items */
  flex-direction: column; /* Stack items vertically */
  width: fit-content; /* Make menu width fit content */
  gap: 6px; /* Keep gap */
  /* min-width: 120px; */ /* Optional: set a min-width if needed */
  z-index: 10; /* Ensure it's above other elements */
  animation: fadeIn 0.15s ease-out; /* Add a subtle fade-in */
  pointer-events: all; /* Ensure menu itself is interactive */
  /* -webkit-app-region: no-drag; */ /* 移除 */
}

/* Remove ul styling as we are styling buttons directly */
/* .menu ul { ... } */

/* Style menu buttons directly */
.pet-menu button {
  background-color: transparent; /* Make button background transparent */
  border: none; /* Remove button border */
  border-radius: 6px; /* Slightly larger radius for buttons */
  padding: 6px 10px; /* Adjusted padding */
  font-size: 14px; /* Slightly larger font */
  color: #334155; /* Darker text color (Tailwind slate-700) */
  cursor: pointer;
  text-align: center; /* Center button text */
  box-sizing: border-box;
  transition: background-color 0.2s ease, color 0.2s ease; /* Added color transition */
  white-space: nowrap;
}

.pet-menu button:hover {
  background-color: #e2e8f0; /* Light gray background on hover (Tailwind slate-200) */
  color: #1e293b; /* Darker text on hover (Tailwind slate-800) */
}

.pet-menu hr {
  border: none;
  border-top: 1px solid #f1f5f9; /* Lighter separator (Tailwind slate-100) */
  margin: 6px 0; /* Adjusted margin for separators */
}

/* Remove icon placeholder styles */
/* .menu .icon-placeholder { ... } */

/* 动画效果 */
@keyframes popIn {
  0% {
    opacity: 0;
    transform: scale(0.5);
  }
  70% {
    transform: scale(1.1);
  }
  100% {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

/* 跳跃动画 */
@keyframes jump {
  0%, 100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-10px); /* 跳跃高度 */
  }
}

.jump-animation { animation: jump 0.5s ease-in-out; }

/* 旋转动画 (例如：玩耍) */
@keyframes spin {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}
.spin-animation { animation: spin 0.6s linear; }

/* 摇晃动画 (例如：喂食) */
@keyframes shake {
  0%, 100% { transform: translateX(0); }
  25% { transform: translateX(-5px); }
  75% { transform: translateX(5px); }
}
.shake-animation { animation: shake 0.4s ease-in-out; }

/* 缩放/心跳动画 (例如：抚摸) */
@keyframes pulse {
  0%, 100% { transform: scale(1); }
  50% { transform: scale(1.1); }
}
.pulse-animation { animation: pulse 0.5s ease-in-out; }

/* Remove drag handle style */
/* .drag-handle { ... } */

/* 升级动画 */
.level-up-small {
  animation: levelUp 1s ease-out;
}

.level-up-medium {
  animation: levelUpMedium 1.2s ease-out;
}

.level-up-large {
  animation: levelUpLarge 1.5s ease-out;
}

@keyframes levelUp {
  0% {
    transform: scale(1);
    box-shadow: 0 0 0 rgba(255, 215, 0, 0.7);
  }
  50% {
    transform: scale(1.5);
    box-shadow: 0 0 20px rgba(255, 215, 0, 0.7);
  }
  100% {
    transform: scale(1);
    box-shadow: 0 0 0 rgba(255, 215, 0, 0);
  }
}

@keyframes levelUpMedium {
  0% {
    transform: scale(1);
    box-shadow: 0 0 0 rgba(100, 200, 255, 0.7);
  }
  25% {
    transform: rotate(-15deg) scale(1.3);
  }
  50% {
    transform: rotate(15deg) scale(1.8);
    box-shadow: 0 0 30px rgba(100, 200, 255, 0.9);
  }
  75% {
    transform: rotate(-10deg) scale(1.5);
  }
  100% {
    transform: rotate(0) scale(1);
    box-shadow: 0 0 0 rgba(100, 200, 255, 0);
  }
}

@keyframes levelUpLarge {
  0% {
    transform: scale(1);
    filter: brightness(1);
    box-shadow: 0 0 0 rgba(255, 100, 200, 0.7);
  }
  20% {
    transform: scale(1.2);
    filter: brightness(1.5);
  }
  40% {
    transform: scale(1.8) rotate(10deg);
    box-shadow: 0 0 40px rgba(255, 100, 200, 0.9);
  }
  60% {
    transform: scale(2.2) rotate(-15deg);
    filter: brightness(2);
    box-shadow: 0 0 50px rgba(255, 100, 200, 1);
  }
  80% {
    transform: scale(1.5) rotate(5deg);
    filter: brightness(1.8);
  }
  100% {
    transform: scale(1) rotate(0);
    filter: brightness(1);
    box-shadow: 0 0 0 rgba(255, 100, 200, 0);
  }
}

/* 等级显示样式 */
.level-display {
  position: absolute;
  top: -20px;
  right: -10px;
  background: gold;
  color: #333;
  border-radius: 50%;
  width: 24px;
  height: 24px;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 12px;
  font-weight: bold;
}