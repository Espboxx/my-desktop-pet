/* Removed .pet-window-container and .desktop-pet-container rules */

/* Main container for pet and menu */
.pet-container {
  /* display: flex; */ /* No longer using flex for main layout */
  /* flex-direction: row; */
  /* align-items: center; */
  /* justify-content: center; */
  /* gap: 10px; */
   width: auto; /* Auto width to fit content */
   height: auto; /* Auto height to fit content */
  padding: 15px 15px 50px 15px; /* T=15, R=15, B=50, L=15 */
  box-sizing: border-box;
  background-color: transparent;
  pointer-events: none; /* Container doesn't block clicks */
  position: relative; /* Crucial for absolute positioning of children */
  /* 浮动 */
  /* position: absolute; */
  z-index: 100;
  /* 居中定位在窗口 */
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

/* Removed rule for .pet-container * as it's no longer needed */

/* Pet element */
.pet {
  width: 80px;
  height: 80px;
  background-color: #ffcc80;
  border: 2px solid #e65100;
  border-radius: 50% 50% 30% 30% / 60% 60% 40% 40%;
  /* position: absolute; */ /* Removed absolute positioning */
  /* bottom: 0; */
  /* left: 5px; */
  cursor: grab;
  flex-shrink: 0; /* Prevent pet from shrinking */
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
  font-size: 16px;
  font-weight: bold;
  color: #ffffff;
  box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.2);
  transition: transform 0.1s ease-out;
  user-select: none;
  /* -webkit-app-region: drag; */ /* Remove drag region entirely */
  /* z-index: 2; */ /* No longer needed with flex layout */
  pointer-events: auto; /* Pet should now always be interactive */
}

.pet:hover {
  transform: scale(1.05);
  /* pointer-events: auto; - Removed, pet is always auto now */
}

.pet:active {
  cursor: grabbing;
}

.pet-face {
  font-size: 24px;
  line-height: 1;
}

/* 状态条 */
.status-bar {
  position: absolute; /* Position absolutely relative to pet-container */
  top: -10px; /* 向上移动位置 */
  left: 100px; /* Position to the right of the pet (adjust as needed based on pet size/padding) */
  /* bottom: -10px; */ /* Remove bottom positioning */
  /* transform: translateX(-50%); */ /* Remove horizontal centering */
  /* top: -80px; */ /* Remove */
  /* left: 0; */ /* Remove */
  width: 150px; /* Default width for full view */
  background-color: rgba(255, 255, 255, 0.9);
  border: 1px solid #ddd;
  border-radius: 8px;
  padding: 8px;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
  /* z-index: 5; */ /* Remove */
  display: flex;
  flex-direction: column;
  gap: 6px;
  /* -webkit-app-region: no-drag; */ /* 移除 */
  overflow: hidden; /* Hide overflowing content during transition */
  transition: width 0.3s ease-in-out, padding 0.3s ease-in-out, background-color 0.3s ease-in-out, opacity 0.3s ease-in-out; /* Add transitions, including opacity */
  opacity: 1; /* Always visible */
  pointer-events: auto; /* Allow interaction if needed, e.g., clicking on status bar elements in future */
}

/* Remove the hover rule as the bar is always visible now */
/*
.pet-container:hover .status-bar {
  opacity: 1;
  pointer-events: auto;
}
*/

/* Styles for the simplified status bar (when not hovering) */
/* These styles apply when the 'simple' class is present */
.status-bar.simple {
  pointer-events: auto;
}


/* Styles for the simplified status bar (when not hovering) */
.status-bar.simple {
  width: auto; /* Auto width to fit content */
  padding: 4px 8px; /* Smaller padding */
  background-color: rgba(255, 255, 255, 0.8); /* Slightly more transparent */
}

/* Hide all items except the simple level display in simple mode */
.status-bar.simple .status-item:not(.simple-level) {
  display: none;
}

/* Ensure the simple level item is displayed correctly */
.status-bar.simple .status-item.simple-level {
  display: flex; /* Ensure it's displayed */
  justify-content: center; /* Center the level text */
}

.status-bar.simple .status-label,
.status-bar.simple .status-meter {
  display: none; /* Hide label and meter in simple view */
}

.status-bar.simple .status-value {
  min-width: auto; /* Remove min-width */
  text-align: center; /* Center text */
}

.status-item {
  display: flex;
  align-items: center;
  gap: 5px; /* 稍微减小间隙 */
  justify-content: space-between; /* 让元素分布在两端 */
  opacity: 1; /* Default opacity */
  max-height: 50px; /* Default max-height, adjust if needed */
  overflow: hidden; /* Hide content if it overflows during transition */
  transition: opacity 0.3s ease-in-out, max-height 0.3s ease-in-out; /* Add transitions */
}

.status-label {
  font-size: 12px;
  width: 30px; /* 保持标签宽度 */
  color: #555;
  flex-shrink: 0; /* 防止标签收缩 */
}

.status-meter {
  flex-grow: 1; /* 让进度条占据剩余空间 */
  height: 12px;
  background-color: #eee;
  border-radius: 6px;
  overflow: hidden;
  margin: 0 5px; /* 在进度条左右添加一些边距 */
}

.status-meter-fill {
  height: 100%;
  border-radius: 6px;
  transition: width 0.5s ease, background-color 0.3s ease; /* Add transition for background color */
}

.status-meter-fill.mood {
  background-color: #ff6b6b;
}

.status-meter-fill.cleanliness {
  background-color: #4ecdc4;
}

.status-meter-fill.hunger {
  background-color: #ffd166;
}

.status-meter-fill.energy {
  background-color: #06d6a0;
}

.status-meter-fill.exp {
  background-color: #9b59b6; /* Added purple color for EXP bar */
}

/* 新增：状态数值样式 */
.status-value {
  font-size: 11px; /* 稍小一点的字体 */
  font-weight: bold;
  color: #333;
  min-width: 25px; /* 保证至少有一定宽度 */
  text-align: right; /* 右对齐 */
  flex-shrink: 0; /* 防止数值收缩 */
}

/* Specific style for EXP value to ensure it fits */
.status-value.exp-value {
  min-width: 60px; /* Increase min-width to fit "XXX / XXX" */
  font-size: 10px; /* Slightly smaller font if needed */
  text-align: right;
}

/* 低状态警告样式 */
.status-meter-fill.low-warning {
  background-color: #f44336; /* 红色 */
  animation: blink-warning 1s infinite alternate; /* 添加闪烁动画 */
}

@keyframes blink-warning {
  from { opacity: 1; }
  to { opacity: 0.6; }
}

/* 状态积极变化动画 */
@keyframes increase-positive-flash {
  0%, 100% { filter: brightness(1); }
  50% { filter: brightness(1.3); } /* 短暂变亮 */
}

.status-meter-fill.increase-positive {
  animation: increase-positive-flash 0.5s ease-out;
}

/* 状态恢复动画 */
@keyframes recovery-positive-flash {
  0%, 100% { box-shadow: none; }
  50% { box-shadow: 0 0 8px 2px rgba(76, 175, 80, 0.7); } /* 短暂绿色外发光 */
}

.status-meter-fill.recovery-positive {
  animation: recovery-positive-flash 0.6s ease-in-out;
}

/* 疲惫动画 */
@keyframes tired-sway {
  0%, 100% { transform: translateX(0) rotate(0); opacity: 1; }
  25% { transform: translateX(-3px) rotate(-2deg); opacity: 0.8; }
  75% { transform: translateX(3px) rotate(2deg); opacity: 0.8; }
}

.pet.tired-animation {
  animation: tired-sway 0.6s ease-in-out;
}

/* 思考动画 */
@keyframes thinking-bob {
  0%, 100% { transform: translateY(0); }
  50% { transform: translateY(-3px); }
}

.pet.thinking-animation {
  animation: thinking-bob 0.7s ease-in-out;
}

/* 分心动画 */
@keyframes distracted-look {
  0%, 100% { transform: translateX(0) rotate(0); }
  20%, 60% { transform: translateX(-4px) rotate(-3deg); }
  40%, 80% { transform: translateX(4px) rotate(3deg); }
}

.pet.distracted-animation {
  animation: distracted-look 0.6s ease-in-out;
}

/* 生病动画 */
@keyframes sick-tremble {
  0%, 100% { transform: translateX(0); filter: brightness(1); }
  10%, 30%, 50%, 70%, 90% { transform: translateX(-1px); filter: brightness(0.8); }
  20%, 40%, 60%, 80% { transform: translateX(1px); filter: brightness(0.8); }
}

.pet.sick-animation {
  animation: sick-tremble 1s linear infinite; /* 无限循环直到状态改变 */
}

/* 思考气泡 */
.thought-bubble {
  position: absolute; /* Position relative to the pet wrapper */
  /* top: -5px; */ /* Remove static positioning, will be handled by JS */
  /* left: 55px; */ /* Remove static positioning, will be handled by JS */
  background-image: linear-gradient(to bottom, #ffffff 90%, #f8f9fa); /* Subtle gradient */
  border: 1px solid #dee2e6; /* Slightly softer border */
  border-radius: 14px; /* Slightly more rounded */
  padding: 10px 14px; /* Slightly increased padding */
  /* font-size: 18px; */ /* Remove static font size, handled by JS */
  box-shadow: 0 3px 8px rgba(0, 0, 0, 0.06); /* More diffused shadow */
  color: #495057; /* Optimized text color for better readability */
  z-index: 5;
  animation: bubbleAppear 0.35s cubic-bezier(0.175, 0.885, 0.32, 1.275); /* New animation */
  /* white-space: nowrap; */ /* Allow text wrapping */
  max-width: 150px; /* Optional: Limit maximum width */
}

.thought-bubble::after {
  content: '';
  position: absolute;
  bottom: -6px; /* Position tail slightly lower */
  left: 15px; /* Adjust horizontal position of tail */
  width: 12px; /* Slightly larger tail */
  height: 12px;
  background-color: #ffffff; /* Match bubble background (top part of gradient) */
  border: 1px solid #dee2e6; /* Match bubble border */
  border-top: none; /* Remove border from sides not visible */
  border-left: none;
  transform: rotate(45deg); /* Keep rotation */
  border-bottom-right-radius: 3px; /* Slightly round the corner */
}

/* Menu (previously context menu) */
.pet-menu {
  position: absolute; /* Position absolutely relative to pet-container */
  /* Positioning is now handled inline via style prop in PetWindow.tsx */
  /* top: 105%; */
  /* left: 50%; */
  /* transform: translateX(-50%); */
  background-color: #ffffff; /* White background */
  border: 2px solid #e2e8f0; /* Lighter border */
  border-radius: 10px; /* Softer radius */
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15); /* Slightly stronger shadow for popup */
  padding: 8px; /* Keep padding */
  display: flex; /* Use flexbox for menu items */
  flex-direction: column; /* Stack items vertically */
  width: fit-content; /* Make menu width fit content */
  gap: 6px; /* Keep gap */
  min-width: 120px; /* Set a min-width to prevent empty menu */
  z-index: 1000; /* Higher z-index to ensure it's on top */
  animation: fadeIn 0.15s ease-out; /* Add a subtle fade-in */
  pointer-events: all; /* Ensure menu itself is interactive */
  /* -webkit-app-region: no-drag; */ /* 移除 */
}

/* Remove ul styling as we are styling buttons directly */
/* .menu ul { ... } */

/* Style menu buttons directly */
.pet-menu button {
  background-color: transparent; /* Make button background transparent */
  border: none; /* Remove button border */
  border-radius: 6px; /* Slightly larger radius for buttons */
  padding: 6px 10px; /* Adjusted padding */
  font-size: 14px; /* Slightly larger font */
  color: #334155; /* Darker text color (Tailwind slate-700) */
  cursor: pointer;
  text-align: center; /* Center button text */
  box-sizing: border-box;
  transition: background-color 0.2s ease, color 0.2s ease; /* Added color transition */
  white-space: nowrap;
}

.pet-menu button:hover {
  background-color: #e2e8f0; /* Light gray background on hover (Tailwind slate-200) */
  color: #1e293b; /* Darker text on hover (Tailwind slate-800) */
}

.pet-menu hr {
  border: none;
  border-top: 1px solid #f1f5f9; /* Lighter separator (Tailwind slate-100) */
  margin: 6px 0; /* Adjusted margin for separators */
}

/* Remove icon placeholder styles */
/* .menu .icon-placeholder { ... } */

/* 动画效果 */
@keyframes bubbleAppear {
  0% {
    opacity: 0;
    transform: scale(0.8) translateY(5px);
  }
  100% {
    opacity: 1;
    transform: scale(1) translateY(0);
  }
}

@keyframes popIn { /* Keep original popIn if used elsewhere, otherwise remove */
  0% {
    opacity: 0;
    transform: scale(0.5);
  }
  70% {
    transform: scale(1.1);
  }
  100% {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

/* 跳跃动画 */
@keyframes jump {
  0%, 100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-10px); /* 跳跃高度 */
  }
}

.jump-animation { animation: jump 0.5s ease-in-out; }

/* 旋转动画 (例如：玩耍) */
@keyframes spin {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}
.spin-animation { animation: spin 0.6s linear; }

/* 摇晃动画 (例如：喂食) */
@keyframes shake {
  0%, 100% { transform: translateX(0); }
  25% { transform: translateX(-5px); }
  75% { transform: translateX(5px); }
}
.shake-animation { animation: shake 0.4s ease-in-out; }

/* 快速摇晃动画 (喂食变体) */
@keyframes fast-shake {
  0%, 100% { transform: translateX(0); }
  10%, 30%, 50%, 70%, 90% { transform: translateX(-4px); }
  20%, 40%, 60%, 80% { transform: translateX(4px); }
}
.fast-shake-animation { animation: fast-shake 0.3s linear; }

/* 缩放/心跳动画 (例如：抚摸) */
@keyframes pulse {
  0%, 100% { transform: scale(1); }
  50% { transform: scale(1.1); }
}
.pulse-animation { animation: pulse 0.5s ease-in-out; }

/* 开心摇摆动画 (抚摸变体) */
@keyframes wiggle {
  0%, 100% { transform: rotate(0deg); }
  25% { transform: rotate(-5deg); }
  75% { transform: rotate(5deg); }
}
.wiggle-animation { animation: wiggle 0.4s ease-in-out; }

/* 睡觉动画 */
@keyframes sleep {
  0%, 100% { transform: translateY(0); }
  50% { transform: translateY(2px); }
}
.sleep-animation {
  animation: sleep 1.5s ease-in-out infinite;
  opacity: 0.8;
}

/* Remove drag handle style */
/* .drag-handle { ... } */

/* 升级动画 */
.level-up-small {
  animation: levelUp 1s ease-out;
}

.level-up-medium {
  animation: levelUpMedium 1.2s ease-out;
}

.level-up-large {
  animation: levelUpLarge 1.5s ease-out;
}

@keyframes levelUp {
  0% {
    transform: scale(1);
    box-shadow: 0 0 0 rgba(255, 215, 0, 0.7);
  }
  50% {
    transform: scale(1.5);
    box-shadow: 0 0 20px rgba(255, 215, 0, 0.7);
  }
  100% {
    transform: scale(1);
    box-shadow: 0 0 0 rgba(255, 215, 0, 0);
  }
}

@keyframes levelUpMedium {
  0% {
    transform: scale(1);
    box-shadow: 0 0 0 rgba(100, 200, 255, 0.7);
  }
  25% {
    transform: rotate(-15deg) scale(1.3);
  }
  50% {
    transform: rotate(15deg) scale(1.8);
    box-shadow: 0 0 30px rgba(100, 200, 255, 0.9);
  }
  75% {
    transform: rotate(-10deg) scale(1.5);
  }
  100% {
    transform: rotate(0) scale(1);
    box-shadow: 0 0 0 rgba(100, 200, 255, 0);
  }
}

@keyframes levelUpLarge {
  0% {
    transform: scale(1);
    filter: brightness(1);
    box-shadow: 0 0 0 rgba(255, 100, 200, 0.7);
  }
  20% {
    transform: scale(1.2);
    filter: brightness(1.5);
  }
  40% {
    transform: scale(1.8) rotate(10deg);
    box-shadow: 0 0 40px rgba(255, 100, 200, 0.9);
  }
  60% {
    transform: scale(2.2) rotate(-15deg);
    filter: brightness(2);
    box-shadow: 0 0 50px rgba(255, 100, 200, 1);
  }
  80% {
    transform: scale(1.5) rotate(5deg);
    filter: brightness(1.8);
  }

  100% {
    transform: scale(1) rotate(0);
    filter: brightness(1);
    box-shadow: 0 0 0 rgba(255, 100, 200, 0);
  }
}

/* Removed .pet-interaction-area styles */
/* Removed extraneous closing brace */


/* 等级显示样式 */
.level-display {
  position: absolute;
  top: -20px;
  right: -10px;
  background: gold;
  color: #333;
  border-radius: 50%;
  width: 24px;
  height: 24px;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 12px;
  font-weight: bold;
}

/* --- Dragging Feedback Animations --- */

/* 被提起动画 */
@keyframes picked-up {
  0% { transform: translateY(0) scale(1); }
  50% { transform: translateY(-8px) scale(1.05); } /* 向上跳跃并稍微放大 */
  100% { transform: translateY(-5px) scale(1.03); } /* 停留在稍微抬起的状态 */
}

.pet.picked-up {
  /* 应用动画，并保持最后一帧状态 */
  animation: picked-up 0.3s ease-out forwards;
}

/* 拖拽中晃动动画 */
@keyframes dragging-shake {
  0%, 100% { transform: translateY(-5px) rotate(0deg) scale(1.03); } /* 保持抬起和放大状态 */
  25% { transform: translateY(-5px) rotate(-2deg) scale(1.03); }
  75% { transform: translateY(-5px) rotate(2deg) scale(1.03); }
}

/* 这个类会被 PetWindow.tsx 动态添加/移除 */
.pet.dragging-shake {
  /* 应用持续的晃动动画 */
  /* 注意：确保这个动画不会覆盖 picked-up 或 landed 的结束状态 */
  /* 如果 picked-up/landed 使用了 forwards，这个动画可能需要更复杂的处理 */
  /* 暂时这样，如果效果不理想再调整 */
  animation: dragging-shake 0.4s ease-in-out infinite alternate;
}

/* --- Simplified Status Bar Styles --- */

/* Style for the status bar container when simplified */
.status-bar.simple {
  width: 55px; /* Fixed width for simple view (adjust as needed) */
  min-width: 40px; /* Ensure a minimum width */
  padding: 4px 8px; /* Reduce padding */
  background-color: rgba(255, 255, 255, 0.8); /* Slightly more transparent */
}

/* Hide full status items when simple, except the level */
.status-bar.simple .status-item:not(.simple-level) {
  opacity: 0;
  max-height: 0;
  padding-top: 0; /* Remove padding during transition */
  padding-bottom: 0;
  margin-top: 0; /* Remove margin during transition */
  margin-bottom: 0;
  gap: 0; /* Remove gap */
  border-top: none; /* Remove potential borders */
}

/* Style for the level item within the simplified bar */
.status-item.simple-level {
justify-content: center; /* Center the level text */
gap: 0; /* No gap needed */
}

/* Adjust the level value text in simple mode */
.status-bar.simple .status-value {
min-width: auto; /* Remove min-width */
text-align: center; /* Center text */
font-size: 12px; /* Slightly larger font for visibility */
}


/* 落地动画 */
@keyframes landed {
  0% { transform: translateY(-5px) scale(1.03); } /* 从抬起状态开始 */
  30% { transform: translateY(3px) scale(0.95); } /* 向下压缩 */
  60% { transform: translateY(-2px) scale(1.02); } /* 轻微反弹 */
  100% { transform: translateY(0) scale(1); } /* 恢复原状 */
}

.pet.landed {
  /* 应用落地动画 */
  animation: landed 0.4s ease-out;
}

/* 新增：待机 - 伸懒腰动画 */
@keyframes stretch {
  0%, 100% { transform: scaleY(1) scaleX(1); }
  50% { transform: scaleY(1.15) scaleX(0.9); } /* 垂直拉伸，水平略微压缩 */
}
.stretch-animation {
  animation: stretch 0.8s ease-in-out;
}

/* 新增：待机 - 晃动动画 */
@keyframes idle-wiggle {
  0%, 100% { transform: translateX(0) rotate(0); }
  25% { transform: translateX(-2px) rotate(-2deg); }
  75% { transform: translateX(2px) rotate(2deg); }
}
.idle-wiggle-animation {
  animation: idle-wiggle 0.6s ease-in-out;
}

/* 鼠标悬停歪头动画 */
@keyframes tilt-head {
  0%, 100% { transform: rotate(0deg); }
  50% { transform: rotate(-8deg); } /* 稍微歪一下头 */
}
.tilt-head {
  animation: tilt-head 0.6s ease-in-out;
}

/* 鼠标快速移动环顾动画 */
@keyframes look-around-fast {
  0%, 100% { transform: rotate(0deg); }
  25% { transform: rotate(-10deg) scale(1.02); } /* 向左看 */
  75% { transform: rotate(10deg) scale(1.02); } /* 向右看 */
}
.look-around-fast {
  animation: look-around-fast 0.4s ease-in-out;
}

/* 眨眼动画 */
@keyframes blink {
  0%, 100% { transform: scaleY(1); }
  50% { transform: scaleY(0.1); } /* 垂直方向短暂压缩 */
}

.blink-animation {
  animation: blink 0.3s ease-in-out;
}

/* 重复的眨眼动画定义已删除 */
/* --- End Dragging Feedback Animations --- */

/* --- Autonomous Movement Animation --- */
@keyframes walk-animation {
  0%, 100% { transform: translateY(0) rotate(0deg); }
  25% { transform: translateY(-2px) rotate(-3deg); } /* Slight lift and tilt left */
  75% { transform: translateY(-2px) rotate(3deg); } /* Slight lift and tilt right */
}

.walk-animation {
  /* Apply the walking animation */
  /* Adjust duration and timing function as needed */
  animation: walk-animation 0.6s ease-in-out infinite alternate;
}

/* General Notification Display Style */
.pet-notification {
  position: absolute; /* Position relative to the pet container's coordinate system, but visually near the pet */
  /* Adjust positioning relative to the pet element itself if needed */
  bottom: -35px; /* Position below the pet element */
  left: 50%; /* Center horizontally relative to the pet element */
  transform: translateX(-50%);
  background-color: rgba(40, 40, 40, 0.85); /* Dark semi-transparent background */
  color: #ffffff; /* White text */
  padding: 6px 12px; /* Padding */
  border-radius: 15px; /* Rounded corners */
  font-size: 13px;
  font-weight: 500;
  z-index: 10; /* Ensure it's above the pet but potentially below the menu */
  white-space: nowrap; /* Prevent wrapping for short messages */
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2); /* Subtle shadow */
  animation: fadeIn 0.3s ease-out; /* Reuse existing fadeIn animation */
  pointer-events: none; /* Notification shouldn't block clicks */
}